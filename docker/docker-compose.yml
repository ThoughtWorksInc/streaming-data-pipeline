version: "3"
services:
    kafka-1:
      container_name: kafka-1
      image: wurstmeister/kafka:0.10.0.1-2
      networks:
        - streaming-data-internal
      ports:
        - "9092:9092"
      environment:
        - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
        - KAFKA_ADVERTISED_HOST_NAME=kafka-1
        - KAFKA_ADVERTISED_PORT=9092
      depends_on:
        - zookeeper

    kafka-2:
      container_name: kafka-2
      image: wurstmeister/kafka:0.10.0.1-2
      networks:
        - streaming-data-internal
      ports:
        - "9093:9092"
      environment:
        - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
        - KAFKA_ADVERTISED_HOST_NAME=kafka-2
        - KAFKA_ADVERTISED_PORT=9092
      depends_on:
        - zookeeper

    kafka-3:
      container_name: kafka-3
      image: wurstmeister/kafka:0.10.0.1-2
      volumes:
        - "./setup-kafka.sh:/setup-kafka.sh"
      networks:
        - streaming-data-internal
      ports:
        - "9094:9092"
      environment:
        - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
        - KAFKA_ADVERTISED_HOST_NAME=kafka-3
        - KAFKA_ADVERTISED_PORT=9092
      depends_on:
        - zookeeper
        - kafka-1
        - kafka-2
      command : ["/setup-kafka.sh"]

    hadoop:
      container_name: hadoop
      image: sequenceiq/hadoop-docker:2.7.0
      command: "/etc/bootstrap.sh -d"
      networks:
        - streaming-data-internal
      ports:
        - "50070:50070"
        - "50075:50075"
        - "8088:8088"
        - "8042:8042"
        - "9000:9000"
        - "50010:50010"

    hadoop-seed:
      build:
         context: ../hdfs
      networks:
        - streaming-data-internal
      depends_on:
        - hadoop
      restart: on-failure

    zookeeper:
      container_name: zookeeper
      image: zookeeper:3.3.6
      networks:
        - streaming-data-internal
      ports:
        - "2181:2181"

    zookeeper-seed:
      build:
          context: ../zookeeper
      networks:
        - streaming-data-internal
      depends_on:
        - zookeeper

    station-information-producer:
      container_name: station-information-producer
      build:
          context: ../CitibikeApiProducer
          dockerfile: Dockerfile-station-information
      depends_on:
        - kafka-1
        - kafka-2
        - kafka-3
        - zookeeper-seed
      networks:
        - streaming-data-internal

    station-status-producer:
      container_name: station-status-producer
      build:
          context: ../CitibikeApiProducer
          dockerfile: Dockerfile-station-status
      depends_on:
        - kafka-1
        - kafka-2
        - kafka-3
        - zookeeper-seed
      networks:
        - streaming-data-internal

    station-san-francisco-producer:
      container_name: station-san-francisco-producer
      build:
          context: ../CitibikeApiProducer
          dockerfile: Dockerfile-station-san-francisco
      depends_on:
        - kafka-1
        - kafka-2
        - kafka-3
        - zookeeper-seed
      networks:
        - streaming-data-internal

    station-france-producer:
      container_name: station-france-producer
      build:
        context: ../CitibikeApiProducer
        dockerfile: Dockerfile-station-france
      depends_on:
        - kafka-1
        - kafka-2
        - kafka-3
        - zookeeper-seed
      networks:
        - streaming-data-internal

    raw-station-information-data-saver:
      container_name: raw-station-information-data-saver
      build:
          context: ../RawDataSaver
          dockerfile: Dockerfile-station-information
      depends_on:
        - kafka-1
        - kafka-2
        - kafka-3
        - station-information-producer
        - station-status-producer
        - station-san-francisco-producer
        - hadoop-seed
        - zookeeper-seed
      volumes:
        - ~/.ivy2:/root/.ivy2:rw
      networks:
        - streaming-data-internal
      restart: on-failure

    raw-station-status-data-saver:
      container_name: raw-station-status-data-saver
      build:
          context: ../RawDataSaver
          dockerfile: Dockerfile-station-status
      depends_on:
        - kafka-1
        - kafka-2
        - kafka-3
        - station-information-producer
        - station-status-producer
        - station-san-francisco-producer
        - hadoop-seed
        - zookeeper-seed
      volumes:
        - ~/.ivy2:/root/.ivy2:rw
      networks:
        - streaming-data-internal
      restart: on-failure

    raw-station-data-san-francisco-saver:
      container_name: raw-station-data-san-francisco-saver
      build:
          context: ../RawDataSaver
          dockerfile: Dockerfile-station-data-SF
      depends_on:
        - kafka-1
        - kafka-2
        - kafka-3
        - station-information-producer
        - station-status-producer
        - station-san-francisco-producer
        - hadoop-seed
        - zookeeper-seed
      volumes:
        - ~/.ivy2:/root/.ivy2:rw
      networks:
        - streaming-data-internal
      restart: on-failure

    raw-station-data-france-saver:
      container_name: raw-station-data-france-saver
      build:
          context: ../RawDataSaver
          dockerfile: Dockerfile-station-data-France
      depends_on:
        - kafka-1
        - kafka-2
        - kafka-3
        - station-information-producer
        - station-status-producer
        - station-france-producer
        - hadoop-seed
        - zookeeper-seed
      volumes:
        - ~/.ivy2:/root/.ivy2:rw
      networks:
        - streaming-data-internal
      restart: on-failure

    station-consumer:
      container_name: station-consumer
      build:
          context: ../StationConsumer
      depends_on:
        - zookeeper-seed
        - kafka-1
        - kafka-2
        - kafka-3
        - station-status-producer
        - station-san-francisco-producer
        - raw-station-status-data-saver
        - station-france-producer
      volumes:
        - ~/.ivy2:/root/.ivy2:rw
      command: ["./wait-for.sh", "zookeeper:2181", "-t", "30"]
      networks:
        - streaming-data-internal
      restart: on-failure

    station-transformer-nyc:
      container_name: station-transformer-nyc
      build:
          context: ../StationTransformerNYC
      depends_on:
        - zookeeper-seed
        - hadoop-seed
        - kafka-1
        - kafka-2
        - kafka-3
        - station-status-producer
        - station-information-producer
      volumes:
        - ~/.ivy2:/root/.ivy2:rw
      command: ["./wait-for.sh", "zookeeper:2181", "-t", "30"]
      networks:
        - streaming-data-internal
      restart: on-failure

    monitor:
      build:
        context: ../Monitoring
      depends_on:
        - hadoop
        - hadoop-seed
        - station-consumer
      volumes:
        - ~/.ivy2:/root/.ivy2:rw
      networks:
        - streaming-data-internal

networks:
    streaming-data-internal:
